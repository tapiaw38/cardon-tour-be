name: CI - CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Permite ejecutar manualmente el flujo de trabajo desde GitHub UI
  schedule:
    - cron: "0 0 * * *" # Ejecutar todos los días a medianoche (UTC)

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod tidy

      - name: Execute tests
        run: go test -v ./...

      - name: Init Docker Config
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cardon-tour-be:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/cardon-tour-be:latest

      - name: Notify Jenkins
        run: |
          # Obtener el crumb de Jenkins
          CRUMB=$(curl -u user:${{ secrets.JENKINS_API_USER }} "http://18.228.219.191:8080/crumbIssuer/api/json" | jq -r '.crumb')

          # Hacer la notificación a Jenkins con el crumb
          curl -X POST "http://18.228.219.191:8080/job/cardon-tour-be-pipeline/buildWithParameters?token=${{ secrets.JENKINS_API_TOKEN }}" \
          -H "Jenkins-Crumb: $CRUMB"
